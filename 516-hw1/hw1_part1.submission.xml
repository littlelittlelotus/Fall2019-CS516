<?xml version="1.0" encoding="UTF-8"?>


<homework>
<item>
	<id>q1a</id>
	<question> Count the number of tuples in Inproceedings </question>
	<sql><![CDATA[
        SELECT COUNT(*) AS cnt
FROM inproceedings;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
	<id>q1b</id>
	<question> Count the number of tuples in Article </question>
	<sql><![CDATA[
        SELECT COUNT(*) AS cnt
FROM article;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
	<id>q1c</id>
	<question> Count the number of tuples in Authorship </question>
	<sql><![CDATA[
        SELECT COUNT(*) AS cnt
FROM authorship;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
	<id>q2a</id>
	<question> Add a column "Area" in the Inproceedings table. </question>
	<sql><![CDATA[
        ALTER TABLE inproceedings
	ADD area TEXT;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
    <id> q2b </id>
    <question>
        Populate the column 'Area' with the values from the above table if there is a match, otherwise set it to 'UNKNOWN'"
    </question>
    <sql><![CDATA[
        UPDATE inproceedings
SET area='Database'
WHERE booktitle='SIGMOD Conference' 
OR booktitle='VLDB' 
OR booktitle='ICDE' 
OR booktitle='SIGMOD Conference' 
OR booktitle='VLDB' 
OR booktitle=‘ICDE’;

UPDATE inproceedings
SET area='Theory'
WHERE booktitle='STOC' 
OR booktitle='FOCS' 
OR booktitle='SODA' 
OR booktitle=‘ICALP'; 

UPDATE inproceedings
SET area='Systems'
WHERE booktitle='SIGCOMM' 
OR booktitle='ISCA' 
OR booktitle='HPCA' 
OR booktitle=‘PLDI';

UPDATE inproceedings
SET area=‘ML-AI'
WHERE booktitle='IJCAI' 
OR booktitle='ICML' 
OR booktitle='NIPS' 
OR booktitle=‘AAAI';

UPDATE inproceedings
SET area='UNKNOWN'
WHERE area IS NULL;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
	<id>q3a</id>
	<question>Find the number of authors who published in exactly two of the four areas (do not consider UNKNOWN). </question>
	<sql><![CDATA[
        SELECT DISTINCT COUNT(*) OVER () AS cnt
        FROM inproceedings I, authorship A
        WHERE I.area != 'UNKNOWN' AND I.pubkey = A.pubkey
        GROUP BY A.author
        HAVING COUNT(DISTINCT I.area) =2;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
	<id>q3b</id>
    <question>Find the number of authors who wrote more journal papers than conference papers (irrespective of research areas).</question>
	<sql><![CDATA[
        SELECT (MoreJournal + NoJournal) as authorN
        FROM (SELECT COUNT(*) as MoreJournal
        FROM
        (SELECT author, COUNT(*) AS JArticle
        FROM article JOIN authorship ON article.pubkey = authorship.pubkey
        GROUP BY author) AS Journal,
        (SELECT author, COUNT(*) AS CArticle
        FROM inproceedings JOIN authorship ON authorship.pubkey = inproceedings.pubkey
        GROUP BY authorship.author) AS Conference
        WHERE Journal.author = Conference.author AND JArticle > CArticle) as l1,
        (SELECT COUNT(DISTINCT authorship.author) AS NoJournal
        FROM article JOIN authorship ON article.pubkey = authorship.pubkey
        WHERE authorship.author
        NOT IN(
        SELECT DISTINCT authorship.author
        FROM inproceedings JOIN authorship ON inproceedings.pubkey = authorship.pubkey
        )) as l2;
	]]></sql>
    <result>
        ???
    </result>
</item>
<item>
	<id>q3c</id>
    <question>
    Among the authors who have published at least one “Database” paper (in any year),
    find the top-5 authors who published the most number of papers (journal OR conference)
    since the year 2000 (including the year 2000).
    </question>
	<sql><![CDATA[
        SELECT autKey.author, (COUNT(I1.booktitle))+(COUNT(T.journal)) as cnt
        FROM (SELECT A1.author, A1.pubkey
        FROM authorship A1, (SELECT A.author
        FROM inproceedings I, authorship A
        WHERE I.pubkey = A.pubkey AND I.area = 'Database'
        GROUP BY A.author) AS aut
        WHERE A1.author = aut.author) AS autKey
        LEFT JOIN inproceedings I1 ON autKey.pubkey = I1.pubkey
        LEFT JOIN article T ON autKey.pubkey = T.pubkey
        WHERE I1.year >= 2000 OR T.year >= 2000
        GROUP BY autKey.author
        ORDER BY cnt DESC, autKey.author ASC limit 5 ;
	]]></sql>
	<result>
        ???
	</result>
</item>
</homework>
